# Generated by Django 5.2.5 on 2025-08-12 11:08

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PetParent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('unknown', 'Unknown')], max_length=10)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(blank=True, max_length=50)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kgs', max_digits=5, null=True)),
                ('size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large'), ('xlarge', 'Extra Large')], default='medium', max_length=10)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('unknown', 'Unknown')], default='unknown', max_length=10)),
                ('age_months', models.PositiveIntegerField(blank=True, null=True)),
                ('champions_bloodline', models.BooleanField(default=False)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('available', 'Available'), ('reserved', 'Reserved'), ('sold', 'Sold')], default='available', max_length=10)),
                ('rabies_vaccinated', models.BooleanField(default=False, help_text='Rabies vaccination (required by law)')),
                ('rabies_vaccination_date', models.DateField(blank=True, null=True)),
                ('dhpp_vaccinated', models.BooleanField(default=False, help_text='DHPP (Distemper, Hepatitis, Parvovirus, Parainfluenza)')),
                ('dhpp_vaccination_date', models.DateField(blank=True, null=True)),
                ('dewormed', models.BooleanField(default=False)),
                ('deworming_date', models.DateField(blank=True, help_text='Last deworming date', null=True)),
                ('health_certificate', models.FileField(blank=True, help_text='Vet health certificate', null=True, upload_to='pets/health_docs/')),
                ('kci_registered', models.BooleanField(default=False, help_text='Kenya Canine Institute registered')),
                ('registration_number', models.CharField(blank=True, help_text='KCI registration number', max_length=50)),
                ('microchipped', models.BooleanField(default=False, help_text='Dog is microchipped')),
                ('microchip_number', models.CharField(blank=True, help_text='Microchip number (if applicable)', max_length=50)),
                ('health_notes', models.TextField(blank=True, help_text='Additional health information')),
                ('location', models.CharField(blank=True, max_length=100)),
                ('lifestyle', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('apartment_friendly', 'Apartment Friendly'), ('family_friendly', 'Family Friendly'), ('good_with_kids', 'Good with Kids'), ('good_with_other_pets', 'Good with Other Pets'), ('needs_yard', 'Needs Yard'), ('good_for_allergies', 'Good for Allergies'), ('experienced_owner', 'Experienced Owner')], max_length=30), blank=True, default=list, size=None)),
                ('characteristics', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('friendly', 'Friendly'), ('active', 'Active'), ('calm', 'Calm'), ('protective', 'Protective'), ('intelligent', 'Intelligent'), ('easy_to_train', 'Easy to Train'), ('independent', 'Independent'), ('vocal', 'Vocal'), ('shy', 'Shy')], max_length=30), blank=True, default=list, size=None)),
                ('father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='father_of', to='pets.petparent')),
                ('mother', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mother_of', to='pets.petparent')),
            ],
            options={
                'ordering': ['-created_at', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PetPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='pets/gallery/')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('is_main', models.BooleanField(default=False, help_text='Set as main photo')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='pets.pet')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PetVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('video', models.FileField(upload_to='pets/videos/')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='pets.pet')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
